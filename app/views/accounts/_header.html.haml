.card.h-card.p-author{ style: "background-image: url(#{account.header.url(:original)})" }
  .card__illustration
    - unless account.memorial? || account.moved?
      - if user_signed_in? && current_account.id != account.id && !current_account.requested?(account)
        .controls
          - if current_account.following?(account)
            = link_to account_unfollow_path(account), data: { method: :post }, class: 'button pawoo-extension-button--inactive' do
              = fa_icon 'user-times'
              = t('accounts.unfollow')
          - else
            = link_to account_follow_path(account), data: { method: :post }, class: 'button' do
              = fa_icon 'user-plus'
              = t('accounts.follow')
      - elsif !user_signed_in?
        .controls.pawoo-unauthenticated-follow
          .pawoo-unauthenticated-follow__button
            %button.button.omniauth-pixiv.pawoo-unauthenticated-follow__button__link{ data: { follow: account.username } }
              = fa_icon 'user-plus'
              = t('accounts.follow')
            %button.button.pawoo-unauthenticated-follow__button__dropdown{ 'aria-controls': 'pawoo-unauthenticated-follow__dropdown' }
              = fa_icon 'caret-down'
          %ul#pawoo-unauthenticated-follow__dropdown.pawoo-unauthenticated-follow__dropdown.dropdown-menu{ 'aria-expanded': 'false' }
            %li.dropdown-menu__item= link_to 'メールアドレスで登録', new_user_registration_path
            %li.dropdown-menu__item= link_to 'メールアドレスでサインイン', new_user_session_path
            %li.dropdown-menu__item= link_to t('accounts.remote_follow'), account_remote_follow_path(account)

    .avatar= image_tag account.avatar.url(:original), class: 'u-photo'

    .oauth-authentications
      - account.oauth_authentications.each do |oauth_authentication|
        - if oauth_authentication.provider == 'pixiv'
          = link_to "https://www.pixiv.net/member.php?id=#{oauth_authentication.uid}", target: '_blank' do
            .oauth-authentication.pixiv

  .card__bio
    %h1.name
      %span.p-name.emojify= display_name(account)
      %small
        %span @#{account.local_username_and_domain}
        = fa_icon('lock') if account.locked?

    - if account.bootstrap_timeline?
      .roles
        .account-role.admin
          = t 'accounts.roles.admin'

    .bio
      .account__header__content.p-note.emojify= Formatter.instance.simplified_format(account)

    .details-counters
      .counter{ class: active_nav_class(short_account_url(account)) }
        = link_to short_account_url(account), class: 'u-url u-uid' do
          %span.counter-number= number_to_human account.statuses_count, strip_insignificant_zeros: true
          %span.counter-label= t('accounts.posts')

      .counter{ class: active_nav_class(account_following_index_url(account)) }
        = link_to account_following_index_url(account) do
          %span.counter-number= number_to_human account.following_count, strip_insignificant_zeros: true
          %span.counter-label= t('accounts.following')

      .counter{ class: active_nav_class(account_followers_url(account)) }
        = link_to account_followers_url(account) do
          %span.counter-number= number_to_human account.followers_count, strip_insignificant_zeros: true
          %span.counter-label= t('accounts.followers')
