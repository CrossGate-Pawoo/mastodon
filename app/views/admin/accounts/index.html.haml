- content_for :page_title do
  = t('admin.accounts.title')

.filters
  .filter-subset
    %strong= t('admin.accounts.location.title')
    %ul
      %li= filter_link_to t('admin.accounts.location.all'), form_account_filter: account_filter_params.merge(local: nil, remote: nil)
      %li= filter_link_to t('admin.accounts.location.local'), form_account_filter: account_filter_params.merge(local: '1', remote: nil)
      %li= filter_link_to t('admin.accounts.location.remote'), form_account_filter: account_filter_params.merge(remote: '1', local: nil)
  .filter-subset
    %strong= t('admin.accounts.moderation.title')
    %ul
      %li= filter_link_to t('admin.accounts.moderation.all'), form_account_filter: account_filter_params.merge(silenced: nil, suspended: nil)
      %li= filter_link_to t('admin.accounts.moderation.silenced'), form_account_filter: account_filter_params.merge(silenced: '1')
      %li= filter_link_to t('admin.accounts.moderation.suspended'), form_account_filter: account_filter_params.merge(suspended: '1')
  .filter-subset
    %strong= t('admin.accounts.order.title')
    %ul
      %li= filter_link_to t('admin.accounts.order.alphabetic'), form_account_filter: account_filter_params.merge(recent: nil)
      %li= filter_link_to t('admin.accounts.order.most_recent'), form_account_filter: account_filter_params.merge(recent: '1')

= simple_form_for @account_filter, url: admin_accounts_path, method: :get do |f|
  = render 'shared/error_messages', object: f.object

  .fields-group
    - account_filter_params.each do |key, value|
      = f.hidden_field key, value: value
    - search_types = f.object.class::SEARCH_TYPES.map { |key| [f.object.class.human_attribute_name("search_type.#{key}"), key] }
    = f.input :search_type, collection: search_types, wrapper: :with_label, default: :name
    = f.input :keyword, placeholder: f.object.class.human_attribute_name(:keyword)

    .actions
      = f.button :button, t('admin.accounts.search'), type: :submit

= form_tag admin_accounts_url, method: 'GET', class: 'simple_form' do
  .fields-group
    - Admin::FilterHelper::ACCOUNT_FILTERS.each do |key|
      - if params[key].present?
        = hidden_field_tag key, params[key]

    - %i(username display_name email ip).each do |key|
      .input.string.optional
        = text_field_tag key, params[key], class: 'string optional', placeholder: I18n.t("admin.accounts.#{key}")

    .actions
      %button= t('admin.accounts.search')
      = link_to t('admin.accounts.reset'), admin_accounts_path, class: 'button negative'

%table.table
  %thead
    %tr
      %th= t('admin.accounts.username')
      %th= t('admin.accounts.domain')
      %th= t('admin.accounts.confirmed')
      %th= fa_icon 'paper-plane-o'
      %th
  %tbody
<<<<<<< HEAD
    - @accounts.each do |account|
      %tr
        %td= account.username
        %td
          - unless account.local?
            = link_to account.domain, admin_accounts_path(by_domain: account.domain)
        %td
          - if account.local?
            - if account.user.present? && account.user.confirmed?
              %i.fa.fa-check
            - else
              %i.fa.fa-times
        %td
          - if account.local?
            = t('admin.accounts.location.local')
          - elsif account.subscribed?
            %i.fa.fa-check
          - else
            %i.fa.fa-times
        %td
          = table_link_to 'circle', t('admin.accounts.web'), web_path("accounts/#{account.id}")
          = table_link_to 'globe', t('admin.accounts.public'), TagManager.instance.url_for(account)
          = table_link_to 'pencil', t('admin.accounts.edit'), admin_account_path(account.id)
=======
    = render @accounts
>>>>>>> 8963f8c3c2630bfcc377a5ca0513eef5a6b2a4bc

= paginate @accounts
